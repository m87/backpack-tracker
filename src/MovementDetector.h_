#ifndef MOVEMENT_DETECTOR_H
#define MOVEMENT_DETECTOR_H
#include "Managers.h"
#include "cvcommon.h"
#include <vector>
#include "Group.h"
#include "ViewInterface.h"
#include "MDMethod.h"
#include "MogMDMethod.h"

class MovementDetector : public ViewInterface
{
    
    cv::Ptr<cv::BackgroundSubtractor> _mog2;
    cv::Ptr<cv::BackgroundSubtractor> _mog22;
    cv::Mat frameNew, frameLast, frameDiff, freamReal, frameTresh,framedd;
    cv::Mat element,frameNoiseFree,blobs, frameDiff2, frameDiff3;
    cv::Mat frameBg, frameBg2, frameBg3;
    cv::Mat buf1,buf2;
    
    std::vector<cv::Mat> bgBuffer;

    int _bgBufferSize;
    int _bgBufferStep;
    cv::Mat _mask;
    int step;
    int skip;
    bool flag;


    void initMogMethod(ConfigManager& config);
    
    std::vector<std::vector<cv::Point> > contours;


    // deprecated /\

    std::string _type;
    std::unique_ptr<MDMethod> mdMethod;
 
public:
    MovementDetector (std::string type);
    ~MovementDetector ();
    std::vector<std::vector<cv::Point> > getMovementROIs();
    std::vector<Group> mog2Filter(const cv::Mat& input);
    std::vector<Group> detect(const cv::Mat& input);
    void addBgRecord(cv::Mat bg);
    std::vector<std::vector<cv::Point> > getStaticROIs(); 


    const static int MOG2;

    const static int VIEW_INPUT_PREPROCESSED;
    const static int VIEW_INPUT_REAL;


    const static std::string MOG_METHOD;

};


#endif
